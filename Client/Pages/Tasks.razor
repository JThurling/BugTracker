@page "/Tasks"
@using Core.Models.Output.Bug
@using Core.Models.Bugs
@inject HttpClient Http

@if (_tasks == null)
{
    <div class="col-12 bg-white shadow-sm">
        <Skeleton Active="true"></Skeleton>
    </div>
}
else
{
    <div class="col-12 mb-3">
        <div style="background-color: #f0f2f5" class="d-flex justify-content-between p-1">
            <div>
                <h3>Tasks</h3>
            </div>
            <div>
                <Button Class="shadow-sm" Icon="plus" Type="dashed" @onclick="OnCreate">New Task</Button>
            </div>
        </div>
    </div>
    <div class="col-12">
        @foreach (var task in _tasks)
        {
            <div class="shadow-sm mb-2 card border-0">
                <div class="card-body">
                    <div class="row">
                        <div class="col-2">
                            <h6 style="cursor: pointer" @onclick="() => ShowModal(task)">@task.Bug</h6>
                        </div>
                        <div class="col-2">
                            @if (task.SubTasks.Count > 0)
                            {
                                <a @onclick="() => DisplaySubTasks(task)">
                                    <Tag Style="cursor: pointer" Color="blue">Subtask: @task.SubTasks.Count</Tag>
                                </a>
                            }
                        </div>
                        <div class="col-2">
                            <Tooltip Placement="@PlacementType.TopLeft" Title="@task.Priority">
                                @if (task.Priority == "High")
                                {
                                    <Icon Type="flag" Style="font-size: 1.7em" Class="text-danger" Theme="outline"/>
                                }
                                else if (task.Priority == "Medium")
                                {
                                    <Icon Type="flag" Style="font-size: 1.7em" Class="text-warning" Theme="outline"/>
                                }
                                else
                                {
                                    <Icon Type="flag" Style="font-size: 1.7em" Class="text-primary" Theme="outline"/>
                                }
                            </Tooltip>
                        </div>
                        <div class="col-2">
                            <div class="row">
                                <Icon Type="comment" Style="font-size: 1.7em" Theme="outline"/>
                                <p style="font-weight: bold">@task.Comments.Count</p>
                            </div>
                        </div>

                        <div class="col-2">
                            <p style="font-weight: bold">Deadline: @task.Deadline</p>
                        </div>

                        <div class="col-1 offset-1">
                            <Popover Placement="PlacementType.Left" ContentTemplate="@_content" Title="Extra Option" Trigger="@(new AntDesign.TriggerType[] {AntDesign.TriggerType.Click})">
                                <Icon Type="ellipsis" Style="font-size: 1.7em; cursor: pointer" Class="text-secondary" Theme="outline"/>
                            </Popover>
                        </div>


                    </div>
                    @if ((task.SubTasks.Count > 0) && Array.IndexOf(_tasks, task) == Index)
                    {
                        <hr>
                        <div>
                            <h6>Subtasks</h6>
                            <div class="col-12 p-3">
                                @foreach (var subtask in task.SubTasks)
                                {
                                    @if (subtask.Priority == "High")
                                    {
                                        <div class="border-left border-danger pl-3 pt-3 pr-3">
                                            <div class="d-flex justify-content-between">
                                                <p>@subtask.Task</p>
                                                <Tooltip Placement="@PlacementType.Right" Title="@subtask.Priority">
                                                    <Icon Type="flag" Style="font-size: 1.7em" Class="text-danger" Theme="outline"/>
                                                </Tooltip>
                                                <Popover Placement="PlacementType.Left" ContentTemplate="@_content" Title="Extra Option" Trigger="@(new AntDesign.TriggerType[] {AntDesign.TriggerType.Click})">
                                                    <Icon Type="ellipsis" Style="font-size: 1.7em; cursor: pointer" Class="text-secondary" Theme="outline"/>
                                                </Popover>
                                            </div>
                                        </div>
                                    }
                                    else if (subtask.Priority == "Medium")
                                    {
                                        <div class="border-left border-warning pl-3 pt-3 pr-3">
                                            <div class="d-flex justify-content-between">
                                                <p>@subtask.Task</p>
                                                <Tooltip Placement="@PlacementType.Right" Title="@subtask.Priority">
                                                    <Icon Type="flag" Style="font-size: 1.7em" Class="text-warning" Theme="outline"/>
                                                </Tooltip>
                                                <Popover Placement="PlacementType.Left" ContentTemplate="@_content" Title="Extra Option" Trigger="@(new AntDesign.TriggerType[] {AntDesign.TriggerType.Click})">
                                                    <Icon Type="ellipsis" Style="font-size: 1.7em; cursor: pointer" Class="text-secondary" Theme="outline"/>
                                                </Popover>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="border-left border-primary pl-3 pt-3 pr-3">
                                            <div class="d-flex justify-content-between">
                                                <p>@subtask.Task</p>
                                                <Tooltip Placement="@PlacementType.Right" Title="@subtask.Priority">
                                                    <Icon Type="flag" Style="font-size: 1.7em" Class="text-primary" Theme="outline"/>
                                                </Tooltip>
                                                <Popover Placement="PlacementType.Left" ContentTemplate="@_content" Title="Extra Option" Trigger="@(new AntDesign.TriggerType[] {AntDesign.TriggerType.Click})">
                                                    <Icon Type="ellipsis" Style="font-size: 1.7em; cursor: pointer" Class="text-secondary" Theme="outline"/>
                                                </Popover>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
}

<Modal Title="@("Create a new task")"
       Visible="@_create"
       Centered="true"
       OnCancel="CancelCreation"
       Width="1320">

</Modal>

<Modal Title="@($"Task")"
       Centered="true"
       Visible="@_visible"
       OnCancel="@HideModal"
       Width="1320">
    <div class="row">
        <div class="col-6">
            <div class="d-flex justify-content-between mb-3">
                <h4>@Bug.Bug</h4>
                @if (Bug.Priority == "High")
                {
                    <div class="shadow-sm btn-danger btn">
                        @Bug.Priority
                    </div>
                }
                else if (Bug.Priority == "Medium")
                {
                    <div class="shadow-sm btn-warning btn">
                        @Bug.Priority
                    </div>
                }
                else
                {
                    <div class="shadow-sm btn-primary btn">
                        @Bug.Priority
                    </div>
                }

            </div>
            <textarea placeholder="Description" class="foc border-0" style="width: 100%; height: 18vh;">

            </textarea>
            <div class="mt-3" style="border-radius: 5px">
                @foreach (var subtask in Bug.SubTasks)
                {
                    @if (subtask.Priority == "High")
                    {
                        <div class="border-left border-danger pl-3 pt-3 pr-3">
                            <div class="d-flex justify-content-between">
                                <p>@subtask.Task</p>
                                <Tooltip Placement="@PlacementType.Right" Title="@subtask.Priority">
                                    <Icon Type="flag" Style="font-size: 1.7em" Class="text-danger" Theme="outline"/>
                                </Tooltip>
                                <Popover Placement="PlacementType.Right" ContentTemplate="@_content" Title="Extra Option" Trigger="@(new AntDesign.TriggerType[] {AntDesign.TriggerType.Click})">
                                    <Icon Type="ellipsis" Style="font-size: 1.7em; cursor: pointer" Class="text-secondary" Theme="outline"/>
                                </Popover>
                            </div>
                        </div>
                    }
                    else if (subtask.Priority == "Medium")
                    {
                        <div class="border-left border-warning pl-3 pt-3 pr-3">
                            <div class="d-flex justify-content-between">
                                <p>@subtask.Task</p>
                                <Tooltip Placement="@PlacementType.Right" Title="@subtask.Priority">
                                    <Icon Type="flag" Style="font-size: 1.7em" Class="text-warning" Theme="outline"/>
                                </Tooltip>
                                <Popover Placement="PlacementType.Right" ContentTemplate="@_content" Title="Extra Option" Trigger="@(new AntDesign.TriggerType[] {AntDesign.TriggerType.Click})">
                                    <Icon Type="ellipsis" Style="font-size: 1.7em; cursor: pointer" Class="text-secondary" Theme="outline"/>
                                </Popover>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="border-left border-primary pl-3 pt-3 pr-3">
                            <div class="d-flex justify-content-between">
                                <p>@subtask.Task</p>
                                <Tooltip Placement="@PlacementType.Right" Title="@subtask.Priority">
                                    <Icon Type="flag" Style="font-size: 1.7em" Class="text-primary" Theme="outline"/>
                                </Tooltip>
                                <Popover Placement="PlacementType.Right" ContentTemplate="@_content" Title="Extra Option" Trigger="@(new AntDesign.TriggerType[] {AntDesign.TriggerType.Click})">
                                    <Icon Type="ellipsis" Style="font-size: 1.7em; cursor: pointer" Class="text-secondary" Theme="outline"/>
                                </Popover>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
        <div class="col-6" style="height: 70vh">

            <div id="scroller" style="height: 45vh" class="bg-light p-3 overflow">
                <h6 style="position: fixed; margin-top: -5px" class="bg-light p-2">Comment</h6>
                <br class="mb-2">
                @foreach (var comment in Bug.Comments)
                {
                    <div class="bg-dark text-white p-3 mb-2" style="border-radius: 5px">
                        <p>@comment.CommentTime</p>
                        <p>@comment.Comment</p>
                    </div>
                }
                <div id="anchor"></div>
            </div>

            <div style="height: 20vh">
                <BlazoredTextEditor @ref="@QuillHtml">
                    <ToolbarContent>
                        <select class="ql-header">
                            <option selected=""></option>
                            <option value="1"></option>
                            <option value="2"></option>
                            <option value="3"></option>
                            <option value="4"></option>
                            <option value="5"></option>
                        </select>
                        <span class="ql-formats">
                            <button class="ql-bold"></button>
                            <button class="ql-italic"></button>
                            <button class="ql-underline"></button>
                            <button class="ql-strike"></button>
                        </span>
                        <span class="ql-formats">
                            <select class="ql-color"></select>
                            <select class="ql-background"></select>
                        </span>
                        <span class="ql-formats">
                            <button class="ql-list" value="ordered"></button>
                            <button class="ql-list" value="bullet"></button>
                        </span>
                        <span class="ql-formats">
                            <button class="ql-link"></button>
                        </span>
                    </ToolbarContent>
                    <EditorContent>
                    </EditorContent>
                </BlazoredTextEditor>
            </div>
        </div>
    </div>
</Modal>

@code {
    bool _visible = false;
    bool _create = false;
    private BugOutput[] _tasks;
    private BugOutput Bug { get; set; }
    BlazoredTextEditor QuillHtml;
    private uint _offsetTop = 10;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _tasks = await Http.GetFromJsonAsync<BugOutput[]>("api/bug");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

    public bool Display = false;
    public int Index;

    public void DisplaySubTasks(BugOutput bug)
    {
        Display = !Display;
        Index = Array.IndexOf(_tasks, bug);
    }

    private void ShowModal(BugOutput bug)
    {
        _visible = true;
        Bug = bug;
    }

    private void HideModal()
    {
        _visible = false;
    }

    private void OnCreate()
    {
        _create = true;
    }

    private void CancelCreation()
    {
        _create = false;
    }

    //PopOver
    private RenderFragment _content =
        @<div>
            <div class="d-flex justify-content-between">
                <p>Delete</p>
                <Icon Class="text-danger mt-1" Type="delete" Theme="outline" Style="cursor: pointer"/>
            </div>
        </div>;

}

<style>
    .overflow {
        overflow-y: scroll;
    }

    .border-left{
        border-left: 3px;
    }

    ::-webkit-scrollbar{
        width: 5px;
    }

    ::-webkit-scrollbar-thumb {
      background: rgba(53,53,53,0.5);
      border-radius: 10px;
    }

    #anchor {
        overflow-anchor: auto
    }

    #scroller * {
      overflow-anchor: none;
    }

    .foc:focus {
        border: none;
    }


</style>
