@page "/Tasks"
@using Core.Models.Output.Bug
@inject HttpClient Http

@if (_tasks == null)
{
    <div class="col-12 bg-white shadow-sm">
        <Skeleton Active="true"></Skeleton>
    </div>
}
else
{
    <div class="col-12 mb-3">
        <h3>Tasks</h3>
    </div>
    <div class="col-12">
        @foreach (var task in _tasks)
        {
            <div class="shadow-sm mb-2 card border-0">
                <div class="card-body">
                    <div class="row">
                        <div class="col-4">
                            <h6>@task.Bug</h6>
                        </div>
                        <div class="col-4">
                            <a @onclick="DisplaySubTasks"><Tag Style="cursor: pointer" Color="blue">Subtask: @task.SubTasks.Count</Tag></a>
                        </div>
                        <div class="col-2">
                            <Icon Type="flag" Style="font-size: 1.7em" Class="text-danger" Theme="outline"/>
                        </div>
                    </div>
                    @if (Display)
                    {
                        <hr>
                        <div class="">
                            <h6>Subtasks</h6>
                            <div class="col-12 pt-3 pl-3">
                                <Timeline>
                                    @foreach (var subtask in task.SubTasks)
                                    {
                                        <TimelineItem>@subtask.Task</TimelineItem>
                                    }
                                </Timeline>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
}

@code {
    private BugOutput[] _tasks;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _tasks = await Http.GetFromJsonAsync<BugOutput[]>("api/bug");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

    public bool Display = true;

    public void DisplaySubTasks()
    {
        Display = !Display;
    }

}

<style type="text/css">
      .row-no-padding,.row-no-padding div,.row-no-padding div button{
           padding: 0 !important;
      }
</style>
